@import "tailwindcss";

@theme {
  --color-avocado-100: oklch(0.99 0 0);
  --color-dark-bg: oklch(0.1957 0 0);
  --shadow-xs: 0 0 2px rgba(0, 0, 0, 0.1);
  --shadow-sm: 0 0 8px rgba(0, 0, 0, 0.1);
  --shadow-md: 0 2px 12px rgba(0, 0, 0, 0.12);
  --shadow-lg: 0 6px 20px rgba(0, 0, 0, 0.14);
  --shadow-xl: 0 10px 32px rgba(0, 0, 0, 0.16);
  --color-indigo-700: oklch(0.5093 0.2092 276.966);
  --color-indigo-800: oklch(0.3282 0.1302 278.697);
}

.flex-center {
  display: flex;
  justify-content: center;
  align-items: center;
}

.flex-between {
  display: flex;
  justify-content: space-between;
  align-items: center;
}

@layer components {
  .card-lg {
    padding: 1.25rem;
    border: 1px solid var(--color-neutral-300);
    border-radius: var(--radius-lg);
    box-shadow: var(--shadow-md);

    @variant dark {
      border: 1px solid var(--color-neutral-700);
      background-color: var(--color-neutral-800);
    }
  }

  .card-md {
    padding: 1rem;
    border: 1px solid var(--color-neutral-300);
    border-radius: var(--radius-md);
    box-shadow: var(--shadow-sm);

    @variant dark {
      border: 1px solid var(--color-neutral-700);
      background-color: var(--color-neutral-800);
    }
  }

  /* Buttons */
  .button-primary,
  .button-secondary,
  .button-tertiary,
  .button-danger {
    display: flex;
    justify-content: center;
    align-items: center;
    padding: 0.385rem 1rem;
    text-wrap: nowrap;
    font-weight: 500;
    border-radius: var(--radius-md);
    cursor: pointer;
    transition: all 100ms ease-in-out;
  }

  .button-primary {
    color: var(--color-neutral-50);
    background-color: var(--color-indigo-700);
    border: 2px solid var(--color-indigo-700);

    @variant dark {
      background-color: var(--color-indigo-800);
    }
  }

  .button-primary:hover {
    background-color: var(--color-indigo-800);
  }

  .button-secondary {
    color: var(--color-indigo-700);
    border: 2px solid var(--color-indigo-700);

    @variant dark {
      color: var(--color-neutral-100);
      background-color: rgba(255, 255, 255, 0.1);
    }
  }

  .button-secondary:hover {
    background-color: var(--color-indigo-700);
  }

  .button-tertiary {
    color: var(--color-indigo-700);
    padding: 0 0 0.15rem;
    border-bottom: 1px solid var(--color-indigo-700);
    border-radius: 0;
    line-height: 1;
  }

  .button-danger {
    color: var(--color-neutral-100);
    background-color: var(--color-red-600);
    border: 2px solid var(--color-red-700);

    @variant dark {
      background-color: var(--color-red-700);
      border: 2px solid var(--color-red-800);
    }
  }

  .button-danger:hover {
    background-color: var(--color-red-700);

    @variant dark {
      background-color: var(--color-red-600);
    }
  }

  /* Inputs */
  .select,
  .textarea,
  .input {
    height: 2.5rem;
    padding: 0.5rem 0.75rem;
    font-size: 0.875rem;
    width: 100%;
    outline: none;
    border: 1px solid var(--color-gray-300);
    border-radius: var(--radius-md);
    box-shadow: var(--shadow-sm);

    @variant dark {
      border: 1px solid var(--color-gray-700);
    }
  }

  .select option {
    @variant dark {
      background-color: var(--color-neutral-800);
    }
  }

  .textarea {
    height: 4.5rem;
    resize: none;
  }

  .select:focus,
  .textarea:focus,
  .input:focus {
    border: 2px solid var(--color-indigo-400);
    padding: calc(0.5rem - 1px) calc(0.75rem - 1px);

    @variant dark {
      border: 2px solid var(--color-indigo-400);
    }
  }

  .textarea:disabled,
  .input:disabled {
    color: var(--color-gray-500);
    background-color: var(--color-neutral-50);
    border: 1px solid var(--color-gray-200);
    box-shadow: none;

    @variant dark {
      border: 1px solid var(--color-gray-700);
      background-color: var(--color-neutral-800);
    }
  }

  input[type="checkbox"],
  input[type="radio"] {
    appearance: none;
    cursor: pointer;
    display: grid;
    width: 16px;
    height: 16px;
    border: 1px solid var(--color-neutral-500);

    place-items: center;
  }

  input[type="checkbox"] {
    border-radius: var(--radius-sm);
  }

  input[type="radio"] {
    border-radius: 9999px;
  }

  input[type="checkbox"]:checked,
  input[type="radio"]:checked {
    border-color: black;

    @variant dark {
      border-color: white;
    }
  }

  input[type="checkbox"]:checked::before,
  input[type="radio"]:checked::before {
    content: "";
    width: 8.25px;
    height: 8.25px;
    background-color: black;

    @variant dark {
      background-color: white;
    }
  }

  input[type="checkbox"]:checked::before {
    border-radius: 2px;
  }

  input[type="radio"]:checked::before {
    border-radius: 9999px;
  }

  /* ICONS */
  .hover-fade-text {
    color: var(--color-neutral-900);
    cursor: pointer;
    transition: color 150ms ease-in-out;

    @variant dark {
      color: var(--color-neutral-100);
    }
  }

  .hover-fade-text:hover {
    color: var(--color-neutral-500);

    @variant dark {
      color: var(--color-neutral-400);
    }
  }
}

@layer utilities {
  .swiper-transition {
    .swiper-wrapper {
      -webkit-transition-timing-function: linear !important;
      -o-transition-timing-function: linear !important;
      transition-timing-function: linear !important;
    }
  }

  .spinner {
    margin: auto;
    width: 80px;
    aspect-ratio: 1;
    border-radius: 50%;
    border: 8px solid #666666;
    border-right-color: #282727;
    animation: rotate 1s infinite linear;
  }

  .spinner-mini {
    margin: 0;
    width: 20px;
    aspect-ratio: 1;
    border-radius: 50%;
    border: 2px solid #666666;
    border-right-color: transparent;
    animation: rotate 1s infinite linear;
  }

  .highlight {
    position: relative;
    z-index: 5;
    color: var(--color-pink-600);
    font-weight: 600;
    opacity: 0.9;
  }

  .highlight::after {
    content: "";
    display: block;
    position: absolute;
    bottom: 0;
    left: 0;
    height: 100%;
    width: 100%;
    z-index: -1;
    opacity: 0.8;
    transform: scale(1.07, 1.05) skewX(-15deg);
    background-color: var(--color-indigo-800);
  }

  @keyframes rotate {
    to {
      transform: rotate(1turn);
    }
  }
}
